#   Задание "Слишком древний шифр": ("Индиана Джонс")
#
#  ...(выход из ловушки) с двумя каменными вставками для чисел.
#    В первом поле камни с числом менялись постоянно (от 3 до 20) случайным образом,
#   а второе было всегда пустым.
#    Во вторую вставку нужно написать пары чисел, друг за другом,
#   чтобы число из первой вставки было кратно (делилось без остатка) сумме их значений.
#
#   Составьте алгоритм, используя циклы, чтобы в независимости от введённого числа n
#  (от 3 до 20) программа выдавала нужный пароль result, для одного введённого числа.
#
def passw(n) :
    pas = ''
    for i in range(1, 21) :
        for j in range(i + 1, 21):
            if n % (i + j) == 0 :
                pas = pas + str(i) + '_'
                pas = pas + str(j) + " "
    return pas
n = int(input('Введите число из первой вставки : '))
if 3 <= n <= 20 :
    result = passw(n)
    print(result)
#
# конец задачи
#
#  Все пароли для чисел от 3 до 20 (для сверки):
#  3 - 12
#  4 - 13
#  5 - 1423
#  6 - 121524
#  7 - 162534
#  8 - 13172635
#  9 - 1218273645
#  10 - 141923283746
#  11 - 11029384756
#  12 - 12131511124210394857
#  13 - 112211310495867
#  14 - 1611325212343114105968
#  15 - 1214114232133124115106978
#  16 - 1317115262143531341251161079
#  17 - 11621531441351261171089
#  18 - 12151811724272163631545414513612711810
#  19 - 118217316415514613712811910
#  20 - 13141911923282183731746416515614713812911
#

